
#Область ОписаниеПеременных

Перем МинимальнаяДатаНачала;
Перем МаксимальнаяДатаОкончания;

#КонецОбласти

Процедура ОбработкаПроведения(Отказ, Режим)
	
	СформироватьОсновныеНачисления();
	СформироватьДополнительныеНачисления(); // только для процент от услуг
	
	СформироватьСторноЗаписи();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
		
	РасчитатьОклад();
	
	СформироватьУдержания();
		
КонецПроцедуры

Процедура СформироватьДополнительныеНачисления()
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник,
	|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот
	|ПОМЕСТИТЬ ВТ_СуммаУслугЗаПериод
	|ИЗ
	|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоПериода, &КонецПериода,, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачислениеЗарплатыНачисления.Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|		ГДЕ
	|			ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Регистратор)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник,
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот
	|ПОМЕСТИТЬ ВТ_ПроцентОтУслуг
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВКМ_НачислениеЗарплатыНачисления.Сотрудник
	|		ИЗ
	|			Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|		ГДЕ
	|			ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Регистратор)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыНачисления.Ссылка КАК Регистратор,
	|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник,
	|	ВТ_ПроцентОтУслуг.ПроцентОтРабот,
	|	ВТ_СуммаУслугЗаПериод.СуммаКОплатеОборот,
	|	ВКМ_НачислениеЗарплатыНачисления.ВидРасчета,
	|	ВКМ_НачислениеЗарплатыНачисления.ДатаНачала,
	|	ВКМ_НачислениеЗарплатыНачисления.ДатаОкончания
	|ИЗ
	|	ВТ_ПроцентОтУслуг КАК ВТ_ПроцентОтУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|		ПО ВТ_ПроцентОтУслуг.Сотрудник = ВКМ_НачислениеЗарплатыНачисления.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаУслугЗаПериод КАК ВТ_СуммаУслугЗаПериод
	|		ПО ВТ_ПроцентОтУслуг.Сотрудник = ВТ_СуммаУслугЗаПериод.Сотрудник";
	
	Запрос.УстановитьПараметр("НачалоПериода", МинимальнаяДатаНачала);	
	Запрос.УстановитьПараметр("КонецПериода", МаксимальнаяДатаОкончания);	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Регистратор = Выборка.Регистратор;
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = Выборка.ВидРасчета;
		Движение.ПроцентОтУслуг = Выборка.ПроцентОтРабот;
		Движение.СуммаУслуг = Выборка.СуммаКОплатеОборот;
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура СформироватьОсновныеНачисления()
	
	Если Начисления.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	Для Каждого Строка Из Начисления Цикл
		
		Если Строка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
			Если Не ЗначениеЗаполнено(МинимальнаяДатаНачала)
				Или МинимальнаяДатаНачала > Строка.ДатаНачала Тогда
				МинимальнаяДатаНачала = Строка.ДатаНачала;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(МаксимальнаяДатаОкончания)
				Или МаксимальнаяДатаОкончания < Строка.ДатаОкончания Тогда
				МаксимальнаяДатаОкончания = Строка.ДатаОкончания;
			КонецЕсли;		
		КонецЕсли;    
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НачислениеЗарплатыНачисления.Сотрудник КАК Сотрудник,
	|	НачислениеЗарплатыНачисления.ВидРасчета КАК ВидРасчета,
	|	НачислениеЗарплатыНачисления.ДатаНачала КАК ДатаНачала,
	|	НачислениеЗарплатыНачисления.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ДанныеДокумента
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК НачислениеЗарплатыНачисления
	|ГДЕ
	|	НачислениеЗарплатыНачисления.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
	|	УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад,
	|	УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
	|ПОМЕСТИТЬ ВТ_ИсторияОклада
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&МинимальнаяДатаНачала, Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК УсловияОплатыСотрудниковСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УсловияОплатыСотрудников.Период,
	|	УсловияОплатыСотрудников.Сотрудник,
	|	УсловияОплатыСотрудников.ПроцентОтРабот,
	|	УсловияОплатыСотрудников.Оклад
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК УсловияОплатыСотрудников
	|ГДЕ
	|	УсловияОплатыСотрудников.Период > &МинимальнаяДатаНачала
	|	И УсловияОплатыСотрудников.Период < &МаксимальнаяДатаОкончания
	|	И УсловияОплатыСотрудников.Сотрудник В
	|		(ВЫБРАТЬ
	|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
	|		ИЗ
	|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущаяЗапись.Период КАК ДатаНачала,
	|	ТекущаяЗапись.Сотрудник КАК Сотрудник,
	|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(МИНИМУМ(СледующаяЗапись.Период), ДЕНЬ, -1), ДАТАВРЕМЯ(3999, 12, 21)) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_Интервалы
	|ИЗ
	|	ВТ_ИсторияОклада КАК ТекущаяЗапись
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсторияОклада КАК СледующаяЗапись
	|		ПО ТекущаяЗапись.Сотрудник = СледующаяЗапись.Сотрудник
	|		И ТекущаяЗапись.Период < СледующаяЗапись.Период
	|СГРУППИРОВАТЬ ПО
	|	ТекущаяЗапись.Сотрудник,
	|	ТекущаяЗапись.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Интервалы.Сотрудник КАК Сотрудник,
	|	ВТ_ИсторияОклада.Оклад КАК Оклад,
	|	ВТ_ИсторияОклада.ПроцентОтРабот,
	|	ВТ_Интервалы.ДатаНачала КАК ДатаНачала,
	|	ВТ_Интервалы.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТ_ИнтервалыОклада
	|ИЗ
	|	ВТ_Интервалы КАК ВТ_Интервалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсторияОклада КАК ВТ_ИсторияОклада
	|		ПО ВТ_Интервалы.Сотрудник = ВТ_ИсторияОклада.Сотрудник
	|		И ВТ_Интервалы.ДатаНачала = ВТ_ИсторияОклада.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДокумента.ДатаНачала < ВТ_ИнтервалыОклада.ДатаНачала
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаНачала
	|		ИНАЧЕ ВТ_ДанныеДокумента.ДатаНачала
	|	КОНЕЦ КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА ВТ_ДанныеДокумента.ДатаОкончания > ВТ_ИнтервалыОклада.ДатаОкончания
	|			ТОГДА ВТ_ИнтервалыОклада.ДатаОкончания
	|		ИНАЧЕ ВТ_ДанныеДокумента.ДатаОкончания
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	ВТ_ИнтервалыОклада.Оклад КАК Оклад,
	|	ВТ_ИнтервалыОклада.ПроцентОтРабот КАК ПроцентПремии
	|ИЗ
	|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИнтервалыОклада КАК ВТ_ИнтервалыОклада
	|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_ИнтервалыОклада.Сотрудник
	|		И ВТ_ДанныеДокумента.ДатаНачала <= ВТ_ИнтервалыОклада.ДатаОкончания
	|		И ВТ_ДанныеДокумента.ДатаОкончания >= ВТ_ИнтервалыОклада.ДатаНачала
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеЗарплатыНачисления.Сотрудник,
	|	НачислениеЗарплатыНачисления.ВидРасчета,
	|	НачислениеЗарплатыНачисления.ДатаНачала,
	|	НачислениеЗарплатыНачисления.ДатаОкончания,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК НачислениеЗарплатыНачисления
	|ГДЕ
	|	НачислениеЗарплатыНачисления.Ссылка = &Ссылка
	|	И НачислениеЗарплатыНачисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисления
	|	И НачислениеЗарплатыНачисления.ВидРасчета <> ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисления.Оклад)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", МинимальнаяДатаНачала);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", МаксимальнаяДатаОкончания);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл // заполняем значения оклад и процент
		
		Движение = Движения.ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	
	КонецЦикла;	
		
КонецПроцедуры	

Процедура СформироватьСторноЗаписи()
	
	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
	
	Для Каждого Запись Из СторноЗаписи Цикл
		
		Движение = Движения.ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Запись);
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
		Движение.Сумма = 0;
		Движение.ЧасовОтработано = 0;
		Движение.Сторно = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьУдержания()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	ВКМ_ОсновныеНачисления.Сумма
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор";
	               
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма / 100 * 13;
				
	КонецЦикла;
		               	
КонецПроцедуры	

Процедура РасчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
	|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ОсновныеНачисленияДанныеГрафика.Оклад
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисления.Оклад)
	|	И Регистратор = &Ссылка) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Сумма = Движение.Оклад * Выборка.Факт / Выборка.План;
		Движение.ОтработаноДней = Выборка.Факт;
		
		Если Движение.Сторно Тогда
			Движение.Сумма = - Движение.Сумма;
			Движение.ОтработаноДней = - Движение.ОтработаноДней;
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);	
	
КонецПроцедуры	

Процедура РасчитатьОтпуск()

	ПериодДействияНачало = ТекущаяДатаСеанса();
	ПериодДействияКонец = ДобавитьМесяц(ТекущаяДатаСеанса(), -12);

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сумма,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодРегистрации,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Регистратор = ВКМ_ОсновныеНачисленияДанныеГрафика.Регистратор
	|		И ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.Сотрудник
	|ГДЕ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало = &ПериодДействияНачало
	|	И ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец = &ПериодДействияКонец
	|	И ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисления.Отпуск)";
	
	Запрос.УстановитьПараметр("МинимальнаяДатаНачала", ПериодДействияНачало);
	Запрос.УстановитьПараметр("МаксимальнаяДатаОкончания", ПериодДействияКонец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = Движения.ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Сумма = Движение.Оклад * Выборка.ЗначениеПериодРегистрации / Выборка.ЗначениеПериодДействия;
		Движение.ОтработаноДней = 0;
				
	КонецЦикла;	
		
КонецПроцедуры


			
	 
	